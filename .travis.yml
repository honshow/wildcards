# Based on https://github.com/Microsoft/GSL/blob/master/.travis.yml

language: cpp
sudo: false

os: linux
dist: trusty

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps

matrix:
  include:

    ##############
    # Clang on OSX
    ##############

    # XCode 9, Debug, C++11

    - env: COMPILER=clang++ BUILD_TYPE=Debug CXX_STANDARD=11
      os: osx
      osx_image: xcode9
      compiler: clang

    # XCode 9, Debug, C++14

    - env: COMPILER=clang++ BUILD_TYPE=Debug CXX_STANDARD=14
      os: osx
      osx_image: xcode9
      compiler: clang

    # XCode 9, Debug, C++17

    - env: COMPILER=clang++ BUILD_TYPE=Debug CXX_STANDARD=17
      os: osx
      osx_image: xcode9
      compiler: clang

    # XCode 9, Release, C++11

    - env: COMPILER=clang++ BUILD_TYPE=Release CXX_STANDARD=11
      os: osx
      osx_image: xcode9
      compiler: clang

    # XCode 9, Release, C++14

    - env: COMPILER=clang++ BUILD_TYPE=Release CXX_STANDARD=14
      os: osx
      osx_image: xcode9
      compiler: clang

    # XCode 9, Release, C++17

    - env: COMPILER=clang++ BUILD_TYPE=Release CXX_STANDARD=17
      os: osx
      osx_image: xcode9
      compiler: clang

    ################
    # Clang on Linux
    ################

    # Clang 3.9, Debug, C++14

    - env: COMPILER=clang++-3.9 BUILD_TYPE=Debug CXX_STANDARD=14
      addons: &clang39
        apt:
          packages:
            - clang-3.9
          sources:
            - llvm-toolchain-trusty-3.9

    # Clang 3.9, Debug, C++17

    - env: COMPILER=clang++-3.9 BUILD_TYPE=Debug CXX_STANDARD=17
      addons: *clang39

    # Clang 3.9, Release, C++14

    - env: COMPILER=clang++-3.9 BUILD_TYPE=Release CXX_STANDARD=14
      addons: *clang39

    # Clang 3.9, Release, C++17

    - env: COMPILER=clang++-3.9 BUILD_TYPE=Release CXX_STANDARD=17
      addons: *clang39

    # Clang 4.0, Debug, C++11

    - env: COMPILER=clang++-4.0 BUILD_TYPE=Debug CXX_STANDARD=11
      addons: &clang40
        apt:
          packages:
            - clang-4.0
          sources:
            - llvm-toolchain-trusty-4.0

    # Clang 4.0, Debug, C++14

    - env: COMPILER=clang++-4.0 BUILD_TYPE=Debug CXX_STANDARD=14
      addons: *clang40

    # Clang 4.0, Debug, C++17

    - env: COMPILER=clang++-4.0 BUILD_TYPE=Debug CXX_STANDARD=17
      addons: *clang40

    # Clang 4.0, Release, C++11

    - env: COMPILER=clang++-4.0 BUILD_TYPE=Release CXX_STANDARD=11
      addons: *clang40

    # Clang 4.0, Release, C++14

    - env: COMPILER=clang++-4.0 BUILD_TYPE=Release CXX_STANDARD=14
      addons: *clang40

    # Clang 4.0, Release, C++17

    - env: COMPILER=clang++-4.0 BUILD_TYPE=Release CXX_STANDARD=17
      addons: *clang40

    # Clang 5.0, Debug, C++11

    - env: COMPILER=clang++-5.0 BUILD_TYPE=Debug CXX_STANDARD=11
      addons: &clang50
        apt:
          packages:
            - clang-5.0
          sources:
            - llvm-toolchain-trusty-5.0

    # Clang 5.0, Debug, C++14

    - env: COMPILER=clang++-5.0 BUILD_TYPE=Debug CXX_STANDARD=14
      addons: *clang50

    # Clang 5.0, Debug, C++17

    - env: COMPILER=clang++-5.0 BUILD_TYPE=Debug CXX_STANDARD=17
      addons: *clang50

    # Clang 5.0, Release, C++11

    - env: COMPILER=clang++-5.0 BUILD_TYPE=Release CXX_STANDARD=11
      addons: *clang50

    # Clang 5.0, Release, C++14

    - env: COMPILER=clang++-5.0 BUILD_TYPE=Release CXX_STANDARD=14
      addons: *clang50

    # Clang 5.0, Release, C++17

    - env: COMPILER=clang++-5.0 BUILD_TYPE=Release CXX_STANDARD=17
      addons: *clang50

    # Clang 6.0, Debug, C++11

    - env: COMPILER=clang++-6.0 BUILD_TYPE=Debug CXX_STANDARD=11
      addons: &clang60
        apt:
          packages:
            - clang-6.0
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0

    # Clang 6.0, Debug, C++14

    - env: COMPILER=clang++-6.0 BUILD_TYPE=Debug CXX_STANDARD=14
      addons: *clang60

    # Clang 6.0, Debug, C++17

    - env: COMPILER=clang++-6.0 BUILD_TYPE=Debug CXX_STANDARD=17
      addons: *clang60

    # Clang 6.0, Release, C++11

    - env: COMPILER=clang++-6.0 BUILD_TYPE=Release CXX_STANDARD=11
      addons: *clang60

    # Clang 6.0, Release, C++14

    - env: COMPILER=clang++-6.0 BUILD_TYPE=Release CXX_STANDARD=14
      addons: *clang60

    # Clang 6.0, Release, C++17

    - env: COMPILER=clang++-6.0 BUILD_TYPE=Release CXX_STANDARD=17
      addons: *clang60

    ##############
    # GCC on Linux
    ##############

    # GCC 5, Debug, C++11

    - env: COMPILER=g++-5 BUILD_TYPE=Debug CXX_STANDARD=11
      addons: &gcc5
        apt:
          packages:
            - g++-5
          sources: &sources
            - ubuntu-toolchain-r-test

    # GCC 5, Debug, C++14

    - env: COMPILER=g++-5 BUILD_TYPE=Debug CXX_STANDARD=14
      addons: *gcc5

    # GCC 5, Debug, C++17

    - env: COMPILER=g++-5 BUILD_TYPE=Debug CXX_STANDARD=17
      addons: *gcc5

    # GCC 5, Release, C++11

    - env: COMPILER=g++-5 BUILD_TYPE=Release CXX_STANDARD=11
      addons: *gcc5

    # GCC 5, Release, C++14

    - env: COMPILER=g++-5 BUILD_TYPE=Release CXX_STANDARD=14
      addons: *gcc5

    # GCC 5, Release, C++17

    - env: COMPILER=g++-5 BUILD_TYPE=Release CXX_STANDARD=17
      addons: *gcc5

    # GCC 6, Debug, C++11

    - env: COMPILER=g++-6 BUILD_TYPE=Debug CXX_STANDARD=11
      addons: &gcc6
        apt:
          packages:
            - g++-6
          sources: *sources

    # GCC 6, Debug, C++14

    - env: COMPILER=g++-6 BUILD_TYPE=Debug CXX_STANDARD=14
      addons: *gcc6

    # GCC 6, Debug, C++17

    - env: COMPILER=g++-6 BUILD_TYPE=Debug CXX_STANDARD=17
      addons: *gcc6

    # GCC 6, Release, C++11

    - env: COMPILER=g++-6 BUILD_TYPE=Release CXX_STANDARD=11
      addons: *gcc6

    # GCC 6, Release, C++14

    - env: COMPILER=g++-6 BUILD_TYPE=Release CXX_STANDARD=14
      addons: *gcc6

    # GCC 6, Release, C++17

    - env: COMPILER=g++-6 BUILD_TYPE=Release CXX_STANDARD=17
      addons: *gcc6

    # GCC 7, Debug, C++11

    - env: COMPILER=g++-7 BUILD_TYPE=Debug CXX_STANDARD=11
      addons: &gcc7
        apt:
          packages:
            - g++-7
          sources: *sources

    # GCC 7, Debug, C++14

    - env: COMPILER=g++-7 BUILD_TYPE=Debug CXX_STANDARD=14
      addons: *gcc7

    # GCC 7, Debug, C++17

    - env: COMPILER=g++-7 BUILD_TYPE=Debug CXX_STANDARD=17
      addons: *gcc7

    # GCC 7, Release, C++11

    - env: COMPILER=g++-7 BUILD_TYPE=Release CXX_STANDARD=11
      addons: *gcc7

    # GCC 7, Release, C++14

    - env: COMPILER=g++-7 BUILD_TYPE=Release CXX_STANDARD=14
      addons: *gcc7

    # GCC 7, Release, C++17

    - env: COMPILER=g++-7 BUILD_TYPE=Release CXX_STANDARD=17
      addons: *gcc7

    # GCC 8, Debug, C++11

    - env: COMPILER=g++-8 BUILD_TYPE=Debug CXX_STANDARD=11
      addons: &gcc8
        apt:
          packages:
            - g++-8
          sources: *sources

    # GCC 8, Debug, C++14

    - env: COMPILER=g++-8 BUILD_TYPE=Debug CXX_STANDARD=14
      addons: *gcc8

    # GCC 8, Debug, C++17

    - env: COMPILER=g++-8 BUILD_TYPE=Debug CXX_STANDARD=17
      addons: *gcc8

    # GCC 8, Release, C++11

    - env: COMPILER=g++-8 BUILD_TYPE=Release CXX_STANDARD=11
      addons: *gcc8

    # GCC 8, Release, C++14

    - env: COMPILER=g++-8 BUILD_TYPE=Release CXX_STANDARD=14
      addons: *gcc8

    # GCC 8, Release, C++17

    - env: COMPILER=g++-8 BUILD_TYPE=Release CXX_STANDARD=17
      addons: *gcc8

    ################
    # DJGPP on Linux
    ################

    # DJGPP 7, Debug, C++11

    - env: COMPILER=i586-pc-msdosdjgpp-g++ BUILD_TYPE=Debug CXX_STANDARD=11
      addons: &djgpp7

    # DJGPP 7, Debug, C++14

    - env: COMPILER=i586-pc-msdosdjgpp-g++ BUILD_TYPE=Debug CXX_STANDARD=14
      addons: *djgpp7

    # DJGPP 7, Debug, C++17

    - env: COMPILER=i586-pc-msdosdjgpp-g++ BUILD_TYPE=Debug CXX_STANDARD=17
      addons: *djgpp7

    # DJGPP 7, Release, C++11

    - env: COMPILER=i586-pc-msdosdjgpp-g++ BUILD_TYPE=Release CXX_STANDARD=11
      addons: *djgpp7

    # DJGPP 7, Release, C++14

    - env: COMPILER=i586-pc-msdosdjgpp-g++ BUILD_TYPE=Release CXX_STANDARD=14
      addons: *djgpp7

    # DJGPP 7, Release, C++17

    - env: COMPILER=i586-pc-msdosdjgpp-g++ BUILD_TYPE=Release CXX_STANDARD=17
      addons: *djgpp7

install:
  - DEPS_DIR=${TRAVIS_BUILD_DIR}/deps
  - mkdir -p ${DEPS_DIR}
  - cd ${DEPS_DIR}

  - JOBS=2

  #############################################
  # [linux] Install the right version of libc++
  #############################################

  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" && "${COMPILER%%+*}" == "clang" ]]; then
      LLVM_INSTALL=${DEPS_DIR}/llvm/install
      if [[ -z "$(ls -A ${LLVM_INSTALL})" ]]; then
        if   [[ "${COMPILER}" == "clang++-3.8" ]]; then LLVM_VERSION=3.8.1;
        elif [[ "${COMPILER}" == "clang++-3.9" ]]; then LLVM_VERSION=3.9.1;
        elif [[ "${COMPILER}" == "clang++-4.0" ]]; then LLVM_VERSION=4.0.1;
        elif [[ "${COMPILER}" == "clang++-5.0" ]]; then LLVM_VERSION=5.0.2;
        elif [[ "${COMPILER}" == "clang++-6.0" ]]; then LLVM_VERSION=6.0.1;
        fi
        LLVM_URL=http://llvm.org/releases/${LLVM_VERSION}/llvm-${LLVM_VERSION}.src.tar.xz
        LIBCXX_URL=http://llvm.org/releases/${LLVM_VERSION}/libcxx-${LLVM_VERSION}.src.tar.xz
        LIBCXXABI_URL=http://llvm.org/releases/${LLVM_VERSION}/libcxxabi-${LLVM_VERSION}.src.tar.xz
        mkdir -p llvm llvm/build llvm/projects/libcxx llvm/projects/libcxxabi
        travis_retry wget -O - ${LLVM_URL} | tar --strip-components=1 -xJ -C llvm
        travis_retry wget -O - ${LIBCXX_URL} | tar --strip-components=1 -xJ -C llvm/projects/libcxx
        travis_retry wget -O - ${LIBCXXABI_URL} | tar --strip-components=1 -xJ -C llvm/projects/libcxxabi
        (cd llvm/build && cmake .. -DCMAKE_INSTALL_PREFIX=${LLVM_INSTALL})
        (cd llvm/build/projects/libcxx && make install -j${JOBS})
        (cd llvm/build/projects/libcxxabi && make install -j${JOBS})
      fi
      export CXXFLAGS="-isystem ${LLVM_INSTALL}/include/c++/v1"
      export LDFLAGS="-L ${LLVM_INSTALL}/lib -lc++ -lc++abi"
      export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${LLVM_INSTALL}/lib
    fi

  #######################
  # [linux] Install DJGPP
  #######################

  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" && "${COMPILER}" =~ "djgpp" ]]; then
      DJGPP_INSTALL=${DEPS_DIR}/djgpp
      if [[ -z "$(ls -A ${DJGPP_INSTALL})" ]]; then
        DJGPP_URL=https://github.com/andrewwutw/build-djgpp/releases/download/v2.8/djgpp-linux64-gcc720.tar.bz2
        mkdir -p djgpp
        travis_retry wget -O - ${DJGPP_URL} | tar --strip-components=1 -xj -C djgpp
      fi
      export PATH=${DJGPP_INSTALL}/i586-pc-msdosdjgpp/bin/:${DJGPP_INSTALL}/bin/:$PATH
      export GCC_EXEC_PREFIX=${DJGPP_INSTALL}/lib/gcc/
      export DJDIR=${DJGPP_INSTALL}/i586-pc-msdosdjgpp
    fi

  ################
  # Print versions
  ################

  - export CXX=${COMPILER}
  - ${CXX} --version

  - cmake --version

before_script:
  - |
    cd ${TRAVIS_BUILD_DIR}
    cmake . -Bbuild -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DWILDCARDS_BUILD_EXAMPLES=ON -DWILDCARDS_CXX_STANDARD=${CXX_STANDARD}
    cmake --build build -- -j$JOBS

script:
  - |
    if [[ ! "${COMPILER}" =~ "djgpp" ]]; then
      cd build
      ctest --output-on-failure -j${JOBS}
    fi
